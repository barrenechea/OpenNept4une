[include fluidd.cfg]
#[include mainsail.cfg]

# Available: mellow_adxl.cfg, mellow_lis2dw.cfg, btt_adxl.cfg, btt_lis2dw.cfg
#[include accelerometers/mellow_adxl.cfg] # Comment this out when you disconnect the USB accelerometer

[include KAMP_Settings.cfg]

[include ./KAMP/Adaptive_Meshing.cfg]
[include ./KAMP/Line_Purge.cfg]
[include ./KAMP/Smart_Park.cfg]

#      ____                _  __         __  ____              
#     / __ \___  ___ ___  / |/ /__ ___  / /_/ / /__ _____  ___ 
#    / /_/ / _ \/ -_) _ \/    / -_) _ \/ __/_  _/ // / _ \/ -_)
#    \____/ .__/\__/_//_/_/|_/\__/ .__/\__/ /_/ \_,_/_//_/\__/ 
#        /_/                    /_/                            

#-----------------------------------------------------------
### Neptune 4 Firmware Update (by HalfManBear/OpenNept4une):
#-----------------------------------------------------------
# Board: ELEGOO/MKS ZNP-K1. Requires Klipper & MCU FW v0.12.085+.
# Update Steps:
# 1. Compile MCU Firmware:
#    a.  cd ~/klipper && make clean && make menuconfig
#    b. Choose: STM32F401, 32KiB Bootloader, USART PA10/PA9.
#    c. Save and exit (Q then Y).
# 2. Prepare Firmware File:
#    a.  cp ~/klipper/out/klipper.bin ~/printer_data/config/X_4.bin
#    b. In Fluidd (Configurations), right-click X_4.bin and download it.
# 3. Flash Firmware:
#    a. Format a MicroSD card to FAT32.
#    b. Copy downloaded X_4.bin to MicroSD root. Eject safely.
#    c. With printer off, insert MicroSD. Power on and wait 2 mins.
#    d. Verify in Fluidd's System tab.
#    e. If this didn't work rename X_4.bin to elegoo_k1.bin and try again

#####################################################################
# 	Base Config
#####################################################################

# ------------------------------------------------------------------------------ #
# Moonraker and Mainsail settings                                                #
# ------------------------------------------------------------------------------ #

[save_variables]
filename = ~/printer_data/config/saved_variables.cfg

[display_status]

[print_stats]

# ------------------------------------------------------------------------------ #
# Base configuration                                                             #
# ------------------------------------------------------------------------------ #

[mcu]
## The hardware use USART1 PA10/PA9 connect to RK3328
serial: /dev/ttyS0
baud: 250000
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 5000
max_accel_to_decel: 5000
max_z_velocity: 20
max_z_accel: 200
square_corner_velocity: 5.0

## Enable object exclusion (KAMP Settings)
[exclude_object]

[virtual_sdcard]
path: ~/printer_data/gcodes

# ------------------------------------------------------------------------------ #
# System temperatures                                                            #
# ------------------------------------------------------------------------------ #

[temperature_sensor RockchipHost]
sensor_type: temperature_host
min_temp: 10
max_temp: 80

[temperature_sensor STM32MCU]
sensor_type: temperature_mcu
min_temp: 10
max_temp: 85


# ------------------------------------------------------------------------------ #
# X/Y/Z Stepper settings                                                         #
# ------------------------------------------------------------------------------ #

[stepper_x]
step_pin: PC14
dir_pin: PC13
enable_pin: !PC15
microsteps: 16
rotation_distance: 40
full_steps_per_rotation: 200				; set to 400 for 0.9 degree stepper
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: -12
position_endstop: -10
position_max: 325
homing_speed: 50
homing_retract_dist: 0
homing_positive_dir: false

[stepper_y]
step_pin: PB4
dir_pin: !PB3
enable_pin: !PC15
microsteps: 16
rotation_distance: 40
full_steps_per_rotation: 200 				; set to 400 for 0.9 degree stepper
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_min: -2
position_endstop: 0
position_max: 325
homing_speed: 50
homing_retract_dist: 0
homing_positive_dir: false

[stepper_z]
step_pin: PC10
dir_pin: !PA13
enable_pin: !PC11
microsteps: 32
rotation_distance: 8
full_steps_per_rotation: 200
endstop_pin:probe:z_virtual_endstop ## PB12 for Z-max; endstop have'!' is NO
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop:-5
position_max: 405
position_min: -5
homing_speed: 8
homing_retract_dist: 5
second_homing_speed: 3

# ------------------------------------------------------------------------------ #
# TMC UART configuration                                                         #
# ------------------------------------------------------------------------------ #

[tmc2209 stepper_x]
uart_pin: PB9
run_current: 1.0
#hold_current: 0.8
interpolate: True
stealthchop_threshold: 999999
driver_SGTHRS: 90
diag_pin: ^PC0

[tmc2209 stepper_y]
uart_pin: PD2
run_current: 1.1
#hold_current: 1.0
interpolate: True
stealthchop_threshold: 999999
driver_SGTHRS: 80
diag_pin: ^PB8

[tmc2209 stepper_z]
uart_pin: PC5
run_current: 0.8
hold_current: 0.8
interpolate: False
stealthchop_threshold: 0

[tmc2209 extruder]
uart_pin: PC4
run_current: 0.8
hold_current: 0.5
interpolate: False
stealthchop_threshold: 0

# ------------------------------------------------------------------------------ #
# Extruder                                                                       #
# ------------------------------------------------------------------------------ #

[extruder]
step_pin: PA5
dir_pin: !PA6
enable_pin: !PA4
microsteps: 32
rotation_distance: 28.7086					; CALIBRATE!!! Bondtech 5mm Drive Gears
gear_ratio: 52:10
full_steps_per_rotation: 200				; 200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.750
min_temp: 0
max_temp: 330
heater_pin: PA7
sensor_type:NTC 100K MGB18-104F39050L32
sensor_pin: PA1
max_power: 1
control = pid
pid_kp = 35.144
pid_ki = 9.762
pid_kd = 31.630
pressure_advance: 0.020						; CALIBRATE!!!
pressure_advance_smooth_time: 0.02
instantaneous_corner_velocity: 5.0
max_extrude_only_distance: 100
max_extrude_only_velocity: 45
max_extrude_only_accel: 5000
max_extrude_cross_section: 5
step_pulse_duration: 0.000002
min_extrude_temp: 0

[verify_heater extruder]
max_error: 30
check_gain_time: 10
hysteresis: 10
heating_gain: 2

[firmware_retraction]
retract_length: 0.3
## The length of filament (in mm) to retract when G10 is activated, and to unretract
## when G11 is activated (but see unretract_extra_length below). The default is 0 mm.
retract_speed: 40
## The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: 0
## The length (in mm) of *additional* filament to add when unretracting/deretracting.
unretract_speed: 30
## The speed of unretraction/deretraction, in mm/s. The default is 10 mm/s.

# ------------------------------------------------------------------------------ #
# Bed heater                                                                     #
# ------------------------------------------------------------------------------ #

[heater_bed]
heater_pin: PB10
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PA0
max_power: 1.0
control = pid								; Original value control: watermark
pid_kp = 75.397
pid_ki = 0.823
pid_kd = 1727.531
min_temp: 0
max_temp: 100
pwm_cycle_time: 0.0167

[verify_heater heater_bed]
max_error: 120								; maximum error
check_gain_time: 120						; tolerance time
hysteresis: 10								; tolerance temperature
heating_gain: 2								; heating gain


# ------------------------------------------------------------------------------ #
# Fan control                                                                    #
# ------------------------------------------------------------------------------ #

[controller_fan heatbreak+mainboard_fan]
pin: PC7
fan_speed: 1.0               # This sets the fan to run at full speed
heater: extruder, heater_bed 
stepper: stepper_x, stepper_y, stepper_z, extruder
idle_timeout: 900

##fan for printed model FAN2
[fan]
pin: PB7

[fan_generic fan3]
pin: PC9

[fan_generic fan4]
pin: PA8

[fan_generic fan5]
pin: PA15

# ------------------------------------------------------------------------------ #
# SPI Accelerometer Configuration                                                #
# ------------------------------------------------------------------------------ #

[input_shaper]
shaper_type_x = mzv
shaper_freq_x = 62.2
shaper_type_y = ei
shaper_freq_y = 30.0
damping_ratio_x: 0.1
damping_ratio_y: 0.1

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345 x]
cs_pin: rpi:None
spi_bus: spidev0.0
axes_map: x,z,-y

[adxl345 y]
cs_pin: rpi:None
spi_bus: spidev0.1
axes_map: -x,-y,-z

[resonance_tester]
accel_chip_x: adxl345 x
accel_chip_y: adxl345 y
max_smoothing: 0.15
min_freq: 5
max_freq: 90
accel_per_hz: 150
hz_per_sec: 2

probe_points:
    162.5, 162.5, 20  # an example

# ------------------------------------------------------------------------------ #
# Homing and Gantry adjustment routines                                          #
# ------------------------------------------------------------------------------ #

[idle_timeout]
timeout: 36000

[safe_z_home]
home_xy_position: 189.25,144.55				; 215,215
speed: 100									; 200
z_hop: 10
z_hop_speed: 5

# ------------------------------------------------------------------------------ #
# Probe                                                                          #
# ------------------------------------------------------------------------------ #

[probe]
pin: ^PA11
x_offset: -24.25
y_offset: 20.45
z_offset: 0.0
speed: 10.0
samples: 2
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.05
samples_tolerance_retries: 3

[bed_mesh]
speed: 120
horizontal_move_z: 10
mesh_min: 10,21
mesh_max: 300.75,315.45
probe_count: 11,11
algorithm: bicubic
bicubic_tension: 0.2
mesh_pps: 4, 4
fade_start: 1.0
fade_end: 30.0

[screws_tilt_adjust]
screw1_name: center
screw1: 184.50, 144.50					; Center screws
screw2_name: rear left screw
screw2: 57, 277.5						; (226.2, 184.8) original was (202.5, 202.5)
screw3_name: center left screw
screw3: 57, 144.5						; (225, 14.4) original was (202.5, 32.5)
screw4_name: front left screw
screw4: 57, 11.5						; (54, 15.7) original was (32.5, 32.5)
screw5_name: front right screw
screw5: 312, 11.5						; (55.7, 185.8) original was (32.5, 202.5)
screw6_name: center right screw
screw6: 312, 144.5						; (226.2, 184.8) original was (202.5, 202.5)
screw7_name: rear right screw
screw7: 312, 277.5						; (55.7, 185.8) original was (32.5, 202.5)
horizontal_move_z: 10.0
speed: 50.0
screw_thread: CW-M4

#####################################################################
# LED Control ZNP-K1 v1.1+
#####################################################################

[output_pin Frame_Light]
pin: rpi:gpiochip2/gpio2

[output_pin Part_Light]
pin: rpi:gpiochip2/gpio15

[gcode_macro Frame_Light_ON]
gcode:
  SET_PIN PIN=Frame_Light VALUE=1

[gcode_macro Frame_Light_OFF]
gcode:
  SET_PIN PIN=Frame_Light VALUE=0

[gcode_macro Part_Light_ON]
gcode:
  SET_PIN PIN=Part_Light VALUE=1

[gcode_macro Part_Light_OFF]
gcode:
  SET_PIN PIN=Part_Light VALUE=0
  

# ------------------------------------------------------------------------------ #
# Filament sensor                                                                #
# ------------------------------------------------------------------------------ #

[filament_switch_sensor fila]
pause_on_runout: False
runout_gcode:
            M600
insert_gcode:
event_delay: 3.0
pause_delay: 1.0
switch_pin: PA12

# ------------------------------------------------------------------------------ #
# Buzzer configuration                                                           #
# ------------------------------------------------------------------------------ #

[output_pin beeper]
pin: PA2
pwm: true
shutdown_value: 0
value: 0.0
cycle_time: 0.001  # Default PWM frequency: 1 kHz

# ------------------------------------------------------------------------------ #
# Other                                                                          #
# ------------------------------------------------------------------------------ #

[force_move]
enable_force_move: true

[gcode_move]

[respond]
default_type: echo
default_prefix: echo:

# ------------------------------------------------------------------------------ #
# Macro's                                                                        #
# ------------------------------------------------------------------------------ #

[pause_resume]
recover_velocity: 50.0

[gcode_arcs]

## ---------------------------------------------------------------------------- ##
## PRINT_START MACRO                                                            ##
## ---------------------------------------------------------------------------- ##

## Start print gcode defined here. In slicer, use only the following lines for start gcode:
## in slicer, use only the following lines for start gcode:
## PrusaSlicer: ## PRINT_START EXTRUDER_TEMP=[first_layer_temperature] BED_TEMP=[first_layer_bed_temperature]
## OrcaSlicer: ## PRINT_START EXTRUDER_TEMP=[nozzle_temperature_initial_layer] BED_TEMP=[bed_temperature_initial_layer_single]
## SuperSlicer: ## PRINT_START EXTRUDER_TEMP={first_layer_temperature[initial_extruder]+extruder_temperature_offset[initial_extruder]} BED_TEMP=[first_layer_bed_temperature]
## Cura: ## PRINT_START EXTRUDER_TEMP={material_print_temperature_layer_0} BED_TEMP={material_bed_temperature_layer_0}

[gcode_macro PRINT_START]
gcode:
#---   Setting up parameters   ----------------------------------------------------------------------------#
  M117 Setting up parameters and Pre-Heating...						; broadcast message on LCD screen
  RESPOND MSG="Setting up parameters and Pre-Heating..."			; broadcast message in console

  G92 E0															; reset extruder
  G90																; use absolute coordinates
  BED_MESH_CLEAR
  G28																; home all axis (full home XYZ)

  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}

  ## Pre-heat Extruder (no-drip)
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=160
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}

  ## Introduce delay here before starting the Mesh & final extruder heat
  {% set MIN_TEMP = BED_TEMP - (BED_TEMP * 0.15) %}					; Calculates 15% under BED_TEMP
  TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={MIN_TEMP}				; Waits until the bed reaches the calculated minimum temperature
  LEVEL_BED_ADVANCED MAX_AGE=3										; run bed mesh when more then 'x' prints are printed without a mesh
  SMART_PARK
  Frame_Light_ON
  Part_Light_ON

  ## Set the temperature of the extruder and start heating
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}

  # Wait for the extruder and heater_bed to reach target temperature
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP-4} MAXIMUM={EXTRUDER_TEMP+10}
  TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED_TEMP-4} MAXIMUM={BED_TEMP+10}

  LINE_PURGE
  G92 E0															; reset extruder
  G1 Z2.0 F3000														; move Z Axis up
  M117 Printer goes brrbrrr...:)									; printing
  RESPOND MSG="Printer goes brrbrrr...:)"							; broadcast message in console

## ---------------------------------------------------------------------------- ##
## PRINT_END MACRO                                                              ##
## ---------------------------------------------------------------------------- ##

## End print gcode defined here. In slicer, use only the following lines for start gcode:
## PrusaSlicer/OrcaSlicer/SuperSlicer: PRINT_END
## Cura: PRINT_END

[gcode_macro PRINT_END]
gcode:
  M117 Turning off heaters and fans...					; broadcast message on LCD screen
  RESPOND MSG="Shutdown heaters and fans..."			; broadcast message in console
  M400													; wait for buffer to clear
  TURN_OFF_HEATERS										; Turn off heaters
  G92 E0												; reset extruder
  G91													; relative positioning
  G1 E-2 F2700											; retract a bit
  G1 X5 Y5 F3000										; wipe out
  G1 E-2 Z0.2 F1600										; retract and raise Z
  M117 Presenting print...								; broadcast message on LCD screen
  RESPOND MSG="Presenting print..."						; broadcast message in console
  G1 Z10 F3000											; move nozzle up 10mm
  G90													; absolute positioning
  G1 X10 Y325											; park nozzle at rear, present print
  M107													; turn off fan
  Frame_Light_OFF
  Part_Light_OFF
  # G1 Z20 F3000											; move nozzle up 20mm
  # G0 X0 Y220 F3600										; park nozzle at rear
  SAVE_IF_SET											; SAVE_CONFIG if a mesh was probed in START_PRINT
  M84													; disable motors
  M117 Done... Have a nice day!!!						; broadcast message on LCD screen
  RESPOND MSG="Done... Have a nice day!!!"				; broadcast message in console

# ------------------------------------------------------------------------------ #
# Macro's - Basic commands                                                       #
# ------------------------------------------------------------------------------ #

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  PRINT_END
  SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
  SDCARD_RESET_FILE

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
  M400										; wait for current moves to finish
  {% set z = params.Z|default(10)|int %}
  {% set e = params.E|default(2.5) %}
  SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}
  SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}
  SAVE_GCODE_STATE NAME=PAUSE
  M25										; pause SD print
  {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}
    G91										; relative positioning
    M83										; set extruder to relative mode
    G1 E-{e} F2100
    G1 Z{z} F900
  {% else %}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
  {% endif %}
  SAVE_GCODE_STATE NAME=PAUSEPARK
  G90										; absolute positioning
  G1 X0 Y325 F6000							; park nozzle at rear
  G1 E{e} F2100
  SET_IDLE_TIMEOUT TIMEOUT=86400

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
variable_saved_extruder_temp: 0
variable_saved_x: 0.0
variable_saved_y: 0.0
variable_saved_z: 0.0
variable_saved_e: 0.0
gcode:
  {% set e = params.E|default(2.5)|int %}
  SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
  G91										; relative positioning
  M83										; set extruder to relative mode
  G1 E-{e} F900
  RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100
  {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
    G1 Z{zhop * -1} F900
    G1 E{e+0.5} F900
  {% else %}
    G1 Z{zhop * -1} F900
  {% endif %}
  M400										; wait for buffer to clear
  RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60
  M24										; start/resume SD print

# ------------------------------------------------------------------------------ #
# Macro's - Color changing                                                       #
# ------------------------------------------------------------------------------ #

[gcode_macro M600]
description: Pause for color change
  Usage: M600 [B<beeps>] [E<pos>] [L<pos>] [R<temp>] [U<pos>] [X<pos>] [Y<pos>]
              [Z<pos>]
gcode:
  PAUSE P=2{% for k in params|select("in", "BEXYZ") %}{
    ' '~k~'="'~params[k]~'"'}{% endfor %}

# ------------------------------------------------------------------------------ #
# Macro's - Bed leveling and calibration                                         #
# ------------------------------------------------------------------------------ #

[axis_twist_compensation]
calibrate_start_x: 25
calibrate_end_x: 295
calibrate_y: 160

[gcode_macro Axis_Twist_Comp_Tune]
gcode:    
      G28
      AXIS_TWIST_COMPENSATION_CALIBRATE

[gcode_macro BED_LEVEL_SCREWS_TUNE]
gcode:
  BED_MESH_CLEAR
  M106 S255												; Sets Print Fans to 100%
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=60
  G28
  TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM=58 MAXIMUM=65
  SCREWS_TILT_CALCULATE
  #TURN_OFF_HEATERS

[gcode_macro CALIBRATE_PROBE_Z_OFFSET]
gcode:
  # SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=60
  # SET_HEATER_TEMPERATURE HEATER=extruder TARGET=160
  G28
  # TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM=58 MAXIMUM=65
  # TEMPERATURE_WAIT SENSOR=extruder MINIMUM=158 MAXIMUM=170
  PROBE_CALIBRATE

[gcode_macro AUTO_FULL_BED_LEVEL]
gcode:
  RESPOND PREFIX="info" MSG="Running Custom Bed Leveling Macro"
  BED_MESH_CLEAR
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=60
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=160
  M106 S255												; Sets Print Fans to 100%
  G28
  TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM=58 MAXIMUM=65
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM=158 MAXIMUM=170
  BED_MESH_CALIBRATE
  M106 S0												; Sets Print Fans to 0%

[gcode_macro LEVEL_BED_ADVANCED]
description: Levels the bed if the last leveling was MAX_AGE runs ago.
variable_save_at_end: 0
gcode:
  {% set max_age = params.MAX_AGE|default(10)|int %}
  {% set force_level = params.FORCE|default(0)|int %}
  {% set save = params.SAVE|default(0)|int %}

  ; load level_age from stored variables
  {% set svv = printer.save_variables.variables %}
  {% if "level_age" not in svv %} ; first run
    SAVE_VARIABLE VARIABLE=level_age VALUE={max_age}
    {% set level_age = 1 %}
  {% else %} ; load level_age and increment
    {% set level_age = svv.level_age %}
    SAVE_VARIABLE VARIABLE=level_age VALUE={level_age|int + 1}
  {% endif %}
  {action_respond_info("Bed mesh age is " + level_age|string) + "."}

  ; Level eventually
  {% if force_level or (level_age >= max_age|int) %}
    {action_respond_info("Bed mesh exceeded max age. Leveling...")}

    ; homing if not homed yet
    {% if 'xy' not in printer.toolhead.homed_axes %}
    G28
    {% endif %}

  BED_MESH_CALIBRATE
    {% if save %}
      SAVE_VARIABLE VARIABLE=level_age VALUE=1 ; reset counter
      SAVE_CONFIG
    {% else %}
      SET_GCODE_VARIABLE MACRO=LEVEL_BED_ADVANCED VARIABLE=save_at_end VALUE=1
    {% endif %}
  {% else %}
    {action_respond_info("Loading old bed mesh.")}
    BED_MESH_PROFILE LOAD=default
  {% endif %}

[gcode_macro SAVE_IF_SET]
description: runs SAVE_CONFIG if the g-code variable was set in start gcode
gcode:
  {% if printer["gcode_macro LEVEL_BED_ADVANCED"].save_at_end == 1 %}
  {action_respond_info("Saving was requested - saving and restarting now.")}
  SAVE_VARIABLE VARIABLE=level_age VALUE=1
  SAVE_CONFIG
  {% endif %}

# ------------------------------------------------------------------------------ #
# Macro's - PID Tuning                                                           #
# ------------------------------------------------------------------------------ #

[gcode_macro PID_215]
gcode:
  G28
  G1 F600 X184.5 Y144.5 Z15
  M106 S255												; Sets Print Fans to 100%
  PID_CALIBRATE HEATER=extruder TARGET=215
  SAVE_CONFIG

[gcode_macro PID_240]
gcode:
  G28
  G1 F600 X184.5 Y144.5 Z15
  M106 S255												; Sets Print Fans to 100%
  PID_CALIBRATE HEATER=extruder TARGET=240
  SAVE_CONFIG

[gcode_macro PID_BED]
gcode:
  G28
  G1 F600 X184.5 Y144.5 Z15
  M106 S255												; Sets Print Fans to 100%
  PID_CALIBRATE HEATER=heater_bed TARGET=60
  SAVE_CONFIG

# ------------------------------------------------------------------------------ #
# Macro's - Buzzer configuration                                                 #
# ------------------------------------------------------------------------------ #

[gcode_macro M300]
gcode:
    # Validate and set frequency (S), default to 1 kHz if omitted or invalid
    {% set S = params.S|default(1000)|int %}
    {% if S <= 0 %}
      {% set S = 1000 %}
    {% endif %}

    # Validate and set duration (P), default to 100ms if omitted or invalid
    {% set P = params.P|default(100)|int %}
    {% if P <= 0 %}
      {% set P = 100 %}
    {% endif %}

    # Activate the beeper at a 50% duty cycle
    SET_PIN PIN=beeper VALUE=0.5 CYCLE_TIME={1.0 / S}
    # Hold the beep for the specified duration
    G4 P{P}
    # Turn off the beeper
    SET_PIN PIN=beeper VALUE=0
# ------------------------------------------------------------------------------ #
# Macro's - Custom                                                               #
# ------------------------------------------------------------------------------ #

[gcode_macro CLEAN_PRINTER]
gcode:
  G28
  G1 X160 Y322.5 Z200
  M84
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=175
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM=170 MAXIMUM=180
  M117 Done... Good luck cleaning...					; broadcast message on LCD screen
  RESPOND MSG="Done... Good luck cleaning..."			; broadcast message in console

# ------------------------------------------------------------------------------ #
# Macro's - Others                                                               #
# ------------------------------------------------------------------------------ #

[gcode_macro M84]
rename_existing:M84.1
gcode:

  {% if 'X' in params or 'Y' in params or 'Z' in params or 'E' in params %}
  {% if 'X' in params %}
    SET_STEPPER_ENABLE STEPPER=stepper_x enable=0
  {% endif %}
  {% if 'Y' in params %}
    SET_STEPPER_ENABLE STEPPER=stepper_y enable=0
  {% endif %}
  {% if 'Z' in params %}
    SET_STEPPER_ENABLE STEPPER=stepper_z enable=0
  {% endif %}
  {% if 'E' in params %}
    SET_STEPPER_ENABLE STEPPER=extruder enable=0
  {% endif %}
  {% else %}
    SET_STEPPER_ENABLE STEPPER=stepper_x enable=0
    SET_STEPPER_ENABLE STEPPER=stepper_y enable=0
    SET_STEPPER_ENABLE STEPPER=stepper_z enable=0
    SET_STEPPER_ENABLE STEPPER=extruder enable=0
  {% endif %}

[delayed_gcode KINEMATIC_POSITION]
initial_duration:0.2
gcode:
  SET_KINEMATIC_POSITION X=110
  SET_KINEMATIC_POSITION Y=110
  SET_KINEMATIC_POSITION Z=0

# ------------------------------------------------------------------------------ #
# Macro's - ELEGOO                                                               #
# ------------------------------------------------------------------------------ #

#[gcode_macro M201]
#description: Sets maximum accelleration.
#  Usage: M201 [X<accel>] [Y<accel>]
#variable_max_accel: 1.7976931348623157e+308
#gcode:
#  {% if 'X' in params or 'Y' in params %}
#    {% set accel = (params.X|default(params.Y)|float,
#                    params.Y|default(params.X)|float)|min %}
#    SET_GCODE_VARIABLE MACRO=m201 VARIABLE=max_accel VALUE="{accel}"
#    {% if accel < printer.toolhead.max_accel %}
#      SET_VELOCITY_LIMIT ACCEL="{accel
#                      }" ACCEL_TO_DECEL="{accel * 1}"
#    {% endif %}
#  {% else %}
#    SET_VELOCITY_LIMIT
#  {% endif %}

#[gcode_macro M203]
#description: Sets maximum velocity.
#  Usage: M203 [X<velocity>] [Y<velocity>]
#gcode:
#  {% if 'X' in params or 'Y' in params %}
#    {% set velocity = (params.X|default(params.Y)|float,
#                       params.Y|default(params.X)|float,500)|min %}
#    SET_VELOCITY_LIMIT VELOCITY="{velocity}"
#  {% else %}
#    SET_VELOCITY_LIMIT
#  {% endif %}

#[gcode_macro m204]
#description: Sets maximum accelleration.
#  Usage: M204 [S<accel>] [P<accel> T<accel>]
#rename_existing: M99204
#gcode:
#  {% set max_accel = printer["gcode_macro m201"].max_accel %}
#  {% set accel = 0.0 %}
#  {% if 'S' in params %}
#    {% set accel = (params.S|float, max_accel)|min %}
#  {% elif 'P' in params %}
#    {% set accel = (params.P|float, params.T|default(params.P)|float,
#                    max_accel)|min %}
#  {% endif %}
#  {% if accel %}
#    SET_VELOCITY_LIMIT ACCEL="{accel
#                     }" ACCEL_TO_DECEL="{accel * 0.5}"
#  {% else %}
#    SET_VELOCITY_LIMIT
#  {% endif %}

#[gcode_macro M205]
#description: Sets square corner velocity.
#  Usage: M205 [X<velocity>] [Y<velocity>]
#gcode:
#  {% set max_square_corner_velocity = 30 %}
#  {% if 'X' in params or 'Y' in params %}
#    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY="{(params.X|default(0)|float, params.Y|default(0)|float,max_square_corner_velocity)|min}"
#  {% else %}
#    SET_VELOCITY_LIMIT
#  {% endif %}

# ------------------------------------------------------------------------------ #
#                                      END                                       #
# ------------------------------------------------------------------------------ #
